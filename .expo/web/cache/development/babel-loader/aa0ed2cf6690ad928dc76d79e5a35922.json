{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/archingupta/Desktop/Cheffy/screens/location.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Formik } from \"formik\";\nimport MapView, { PROVIDER_GOOGLE, Marker } from \"react-native-maps\";\nimport * as yup from \"yup\";\nimport * as Locate from \"expo-location\";\nvar ReviewSchema = yup.object({\n  flatnumber: yup.string().required(),\n  society: yup.string().required(),\n  area: yup.string().required(),\n  landmark: yup.string().required()\n});\nexport default function Location() {\n  var _this = this;\n\n  var onSubmitHandler = function onSubmitHandler() {\n    console.log(\"going to other page\");\n  };\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      locationServiceEnabled = _useState2[0],\n      setLocationServiceEnabled = _useState2[1];\n\n  var _useState3 = useState(\"Wait, we are fetching you location...\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      displayCurrentAddress = _useState4[0],\n      setDisplayCurrentAddress = _useState4[1];\n\n  var _useState5 = useState({\n    lat: 0,\n    long: 0\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      latlong = _useState6[0],\n      setlatlong = _useState6[1];\n\n  useEffect(function () {\n    CheckIfLocationEnabled();\n    GetCurrentLocation();\n  }, []);\n\n  var GetCurrentLocation = function GetCurrentLocation() {\n    var _await$Locate$request, status, _await$Locate$getCurr, coords, latitude, longitude, response, _iterator, _step, item, address;\n\n    return _regeneratorRuntime.async(function GetCurrentLocation$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Locate.requestForegroundPermissionsAsync());\n\n          case 2:\n            _await$Locate$request = _context.sent;\n            status = _await$Locate$request.status;\n\n            if (status !== \"granted\") {\n              Alert.alert(\"Permission not granted\", \"Allow the app to use location service.\", [{\n                text: \"OK\"\n              }], {\n                cancelable: false\n              });\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(Locate.getCurrentPositionAsync());\n\n          case 7:\n            _await$Locate$getCurr = _context.sent;\n            coords = _await$Locate$getCurr.coords;\n\n            if (!coords) {\n              _context.next = 17;\n              break;\n            }\n\n            latitude = coords.latitude, longitude = coords.longitude;\n            setlatlong({\n              lat: latitude,\n              long: longitude\n            });\n            console.log(latitude, \" longi\", longitude);\n            _context.next = 15;\n            return _regeneratorRuntime.awrap(Locate.reverseGeocodeAsync({\n              latitude: latitude,\n              longitude: longitude\n            }));\n\n          case 15:\n            response = _context.sent;\n\n            for (_iterator = _createForOfIteratorHelperLoose(response); !(_step = _iterator()).done;) {\n              item = _step.value;\n              address = item.name + \", \" + item.street + \", \" + item.postalCode + \", \" + item.city;\n              setDisplayCurrentAddress(address);\n            }\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var CheckIfLocationEnabled = function CheckIfLocationEnabled() {\n    var enabled;\n    return _regeneratorRuntime.async(function CheckIfLocationEnabled$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Locate.hasServicesEnabledAsync());\n\n          case 2:\n            enabled = _context2.sent;\n\n            if (!enabled) {\n              Alert.alert(\"Location Service not enabled\", \"Please enable your location services to continue\", [{\n                text: \"OK\"\n              }], {\n                cancelable: false\n              });\n            } else {\n              setLocationServiceEnabled(enabled);\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, React.createElement(MapView, {\n    provider: PROVIDER_GOOGLE,\n    style: styles.map,\n    region: {\n      latitude: latlong.lat,\n      longitude: latlong.long,\n      latitudeDelta: 0.01,\n      longitudeDelta: 0.01\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, React.createElement(Marker, {\n    coordinate: {\n      latitude: latlong.lat,\n      longitude: latlong.long\n    },\n    title: 'Your location',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }))), React.createElement(View, {\n    style: styles.contentContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, \"What's your address?\")), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, \"address\", displayCurrentAddress)), React.createElement(Formik, {\n    initialValues: {\n      flatnumber: '',\n      society: '',\n      area: '',\n      location: ''\n    },\n    validationSchema: ReviewSchema,\n    onSubmit: function onSubmit(values, actions) {\n      console.log(values);\n      actions.resetForm();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, function (props) {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }, \"Flatnumber\"), React.createElement(TextInput, {\n      placeholder: \"flatnumber\",\n      value: props.values.flatnumber,\n      onChangeText: props.handleChange('flatnumber'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, props.touched.flatnumber && props.errors.flatnumber), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }, \"society\"), React.createElement(TextInput, {\n      placeholder: \"society\",\n      value: props.values.society,\n      onChangeText: props.handleChange('society'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, props.touched.flatnumber && props.errors.flatnumber), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }\n    }, \"area\"), React.createElement(TextInput, {\n      placeholder: \"area\",\n      value: props.values.area,\n      onChangeText: props.handleChange('area'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }, props.touched.area && props.errors.area), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }, \"location\"), React.createElement(TextInput, {\n      placeholder: \"location\",\n      value: props.values.location,\n      onChangeText: props.handleChange('location'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }\n    }, props.touched.location && props.errors.location), React.createElement(Button, {\n      title: \"proceed\",\n      onPress: function onPress() {\n        props.handleSubmit();\n        onSubmitHandler();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }));\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    alignItems: \"center\",\n    paddingTop: 130\n  },\n  contentContainer: {\n    alignItems: \"center\",\n    marginBottom: 20\n  },\n  image: {\n    width: 150,\n    height: 150,\n    resizeMode: \"contain\",\n    marginBottom: 20\n  },\n  title: {\n    fontSize: 22,\n    fontWeight: \"700\",\n    color: \"#FD0139\"\n  },\n  map: {\n    height: 300\n  },\n  text: {\n    fontSize: 20,\n    fontWeight: \"400\",\n    color: \"red\"\n  }\n});","map":{"version":3,"sources":["/Users/archingupta/Desktop/Cheffy/screens/location.js"],"names":["React","useEffect","useState","useRef","Formik","MapView","PROVIDER_GOOGLE","Marker","yup","Locate","ReviewSchema","object","flatnumber","string","required","society","area","landmark","Location","onSubmitHandler","console","log","locationServiceEnabled","setLocationServiceEnabled","displayCurrentAddress","setDisplayCurrentAddress","lat","long","latlong","setlatlong","CheckIfLocationEnabled","GetCurrentLocation","requestForegroundPermissionsAsync","status","Alert","alert","text","cancelable","getCurrentPositionAsync","coords","latitude","longitude","reverseGeocodeAsync","response","item","address","name","street","postalCode","city","hasServicesEnabledAsync","enabled","styles","container","map","latitudeDelta","longitudeDelta","contentContainer","title","location","values","actions","resetForm","props","handleChange","touched","errors","handleSubmit","StyleSheet","create","flex","backgroundColor","alignItems","paddingTop","marginBottom","image","width","height","resizeMode","fontSize","fontWeight","color"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,EAAiCC,MAAjC,QAA8C,OAA9C;;;;;;;AAEA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAOC,OAAP,IAAkBC,eAAlB,EAAmCC,MAAnC,QAAiD,mBAAjD;AACA,OAAO,KAAKC,GAAZ,MAAoB,KAApB;AACA,OAAO,KAAKC,MAAZ,MAAwB,eAAxB;AAEA,IAAMC,YAAY,GAACF,GAAG,CAACG,MAAJ,CAAW;AAC1BC,EAAAA,UAAU,EAACJ,GAAG,CAACK,MAAJ,GAAaC,QAAb,EADe;AAE1BC,EAAAA,OAAO,EAACP,GAAG,CAACK,MAAJ,GAAaC,QAAb,EAFkB;AAG1BE,EAAAA,IAAI,EAACR,GAAG,CAACK,MAAJ,GAAaC,QAAb,EAHqB;AAI1BG,EAAAA,QAAQ,EAACT,GAAG,CAACK,MAAJ,GAAaC,QAAb;AAJiB,CAAX,CAAnB;AAOA,eAAe,SAASI,QAAT,GACf;AAAA;;AACI,MAAMC,eAAe,GAAC,SAAhBA,eAAgB,GAAI;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AAEH,GAHD;;AAIA,kBAA4DnB,QAAQ,CAAC,KAAD,CAApE;AAAA;AAAA,MAAOoB,sBAAP;AAAA,MAA+BC,yBAA/B;;AACF,mBAA0DrB,QAAQ,CAChE,uCADgE,CAAlE;AAAA;AAAA,MAAOsB,qBAAP;AAAA,MAA8BC,wBAA9B;;AAGA,mBAA8BvB,QAAQ,CAAC;AAAEwB,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,IAAI,EAAE;AAAhB,GAAD,CAAtC;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AAEA5B,EAAAA,SAAS,CAAC,YAAM;AACd6B,IAAAA,sBAAsB;AACtBC,IAAAA,kBAAkB;AACnB,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAMA,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACFtB,MAAM,CAACuB,iCAAP,EADE;;AAAA;AAAA;AACnBC,YAAAA,MADmB,yBACnBA,MADmB;;AAGzB,gBAAIA,MAAM,KAAK,SAAf,EAA0B;AACxBC,cAAAA,KAAK,CAACC,KAAN,CACE,wBADF,EAEE,wCAFF,EAGE,CAAC;AAAEC,gBAAAA,IAAI,EAAE;AAAR,eAAD,CAHF,EAIE;AAAEC,gBAAAA,UAAU,EAAE;AAAd,eAJF;AAMD;;AAVwB;AAAA,6CAYF5B,MAAM,CAAC6B,uBAAP,EAZE;;AAAA;AAAA;AAYnBC,YAAAA,MAZmB,yBAYnBA,MAZmB;;AAAA,iBAcrBA,MAdqB;AAAA;AAAA;AAAA;;AAefC,YAAAA,QAfe,GAeSD,MAfT,CAefC,QAfe,EAeLC,SAfK,GAeSF,MAfT,CAeLE,SAfK;AAgBvBZ,YAAAA,UAAU,CAAC;AACTH,cAAAA,GAAG,EAAEc,QADI;AAETb,cAAAA,IAAI,EAAEc;AAFG,aAAD,CAAV;AAIArB,YAAAA,OAAO,CAACC,GAAR,CAAYmB,QAAZ,EAAsB,QAAtB,EAAgCC,SAAhC;AApBuB;AAAA,6CAqBFhC,MAAM,CAACiC,mBAAP,CAA2B;AAC9CF,cAAAA,QAAQ,EAARA,QAD8C;AAE9CC,cAAAA,SAAS,EAATA;AAF8C,aAA3B,CArBE;;AAAA;AAqBnBE,YAAAA,QArBmB;;AA0BvB,6DAAiBA,QAAjB,iCAA2B;AAAlBC,cAAAA,IAAkB;AACrBC,cAAAA,OADqB,GACRD,IAAI,CAACE,IADG,UACMF,IAAI,CAACG,MADX,UACsBH,IAAI,CAACI,UAD3B,UAC0CJ,IAAI,CAACK,IAD/C;AAGzBxB,cAAAA,wBAAwB,CAACoB,OAAD,CAAxB;AACD;;AA9BsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAkCA,MAAMf,sBAAsB,GAAG,SAAzBA,sBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACTrB,MAAM,CAACyC,uBAAP,EADS;;AAAA;AACzBC,YAAAA,OADyB;;AAG7B,gBAAI,CAACA,OAAL,EAAc;AACZjB,cAAAA,KAAK,CAACC,KAAN,CACE,8BADF,EAEE,kDAFF,EAGE,CAAC;AAAEC,gBAAAA,IAAI,EAAE;AAAR,eAAD,CAHF,EAIE;AAAEC,gBAAAA,UAAU,EAAE;AAAd,eAJF;AAMD,aAPD,MAOO;AACLd,cAAAA,yBAAyB,CAAC4B,OAAD,CAAzB;AACD;;AAZ4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAkBE,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,OAAD;AACR,IAAA,QAAQ,EAAE/C,eADF;AAER,IAAA,KAAK,EAAE8C,MAAM,CAACE,GAFN;AAGR,IAAA,MAAM,EAAE;AACNd,MAAAA,QAAQ,EAAEZ,OAAO,CAACF,GADZ;AAENe,MAAAA,SAAS,EAAEb,OAAO,CAACD,IAFb;AAGN4B,MAAAA,aAAa,EAAE,IAHT;AAINC,MAAAA,cAAc,EAAE;AAJV,KAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUR,oBAAC,MAAD;AACA,IAAA,UAAU,EACR;AACEhB,MAAAA,QAAQ,EAACZ,OAAO,CAACF,GADnB;AAEEe,MAAAA,SAAS,EAACb,OAAO,CAACD;AAFpB,KAFF;AAOE,IAAA,KAAK,EAAE,eAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVQ,CADA,CADJ,EAyBA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEyB,MAAM,CAACK,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,CAzBA,EA4BA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAAChB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAkCZ,qBAAlC,CA5BA,CADJ,EA+BI,oBAAC,MAAD;AAAQ,IAAA,aAAa,EAAE;AAACZ,MAAAA,UAAU,EAAC,EAAZ;AAAeG,MAAAA,OAAO,EAAC,EAAvB;AAA0BC,MAAAA,IAAI,EAAC,EAA/B;AAAkC2C,MAAAA,QAAQ,EAAC;AAA3C,KAAvB;AACA,IAAA,gBAAgB,EAAEjD,YADlB;AAEA,IAAA,QAAQ,EAAE,kBAACkD,MAAD,EAAQC,OAAR,EAAkB;AAExBzC,MAAAA,OAAO,CAACC,GAAR,CAAYuC,MAAZ;AACAC,MAAAA,OAAO,CAACC,SAAR;AAEH,KAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQK,UAACC,KAAD;AAAA,WACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI,oBAAC,SAAD;AAAY,MAAA,WAAW,EAAC,YAAxB;AAAqC,MAAA,KAAK,EAAEA,KAAK,CAACH,MAAN,CAAahD,UAAzD;AAAqE,MAAA,YAAY,EAAEmD,KAAK,CAACC,YAAN,CAAmB,YAAnB,CAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOD,KAAK,CAACE,OAAN,CAAcrD,UAAd,IAA4BmD,KAAK,CAACG,MAAN,CAAatD,UAAhD,CAHJ,EAII,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,EAKI,oBAAC,SAAD;AAAY,MAAA,WAAW,EAAC,SAAxB;AAAkC,MAAA,KAAK,EAAEmD,KAAK,CAACH,MAAN,CAAa7C,OAAtD;AAA+D,MAAA,YAAY,EAAEgD,KAAK,CAACC,YAAN,CAAmB,SAAnB,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAMI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOD,KAAK,CAACE,OAAN,CAAcrD,UAAd,IAA4BmD,KAAK,CAACG,MAAN,CAAatD,UAAhD,CANJ,EAOI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,EAQI,oBAAC,SAAD;AAAY,MAAA,WAAW,EAAC,MAAxB;AAA+B,MAAA,KAAK,EAAEmD,KAAK,CAACH,MAAN,CAAa5C,IAAnD;AAAyD,MAAA,YAAY,EAAE+C,KAAK,CAACC,YAAN,CAAmB,MAAnB,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,EASI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOD,KAAK,CAACE,OAAN,CAAcjD,IAAd,IAAsB+C,KAAK,CAACG,MAAN,CAAalD,IAA1C,CATJ,EAUI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ,EAWI,oBAAC,SAAD;AAAY,MAAA,WAAW,EAAC,UAAxB;AAAmC,MAAA,KAAK,EAAE+C,KAAK,CAACH,MAAN,CAAaD,QAAvD;AAAiE,MAAA,YAAY,EAAEI,KAAK,CAACC,YAAN,CAAmB,UAAnB,CAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,EAYI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOD,KAAK,CAACE,OAAN,CAAcN,QAAd,IAA0BI,KAAK,CAACG,MAAN,CAAaP,QAA9C,CAZJ,EAaI,oBAAC,MAAD;AAAS,MAAA,KAAK,EAAC,SAAf;AAAyB,MAAA,OAAO,EAAE,mBAAI;AAACI,QAAAA,KAAK,CAACI,YAAN;AAAqBhD,QAAAA,eAAe;AAAG,OAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,CADH;AAAA,GARL,CA/BJ,CADJ;AA4DH;AACD,IAAMiC,MAAM,GAACgB,UAAU,CAACC,MAAX,CAAkB;AAC3BhB,EAAAA,SAAS,EAAE;AACPiB,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE,OAFV;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,UAAU,EAAE;AAJL,GADgB;AAOzBhB,EAAAA,gBAAgB,EAAE;AAChBe,IAAAA,UAAU,EAAE,QADI;AAEhBE,IAAAA,YAAY,EAAE;AAFE,GAPO;AAWzBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,GADF;AAELC,IAAAA,MAAM,EAAE,GAFH;AAGLC,IAAAA,UAAU,EAAE,SAHP;AAILJ,IAAAA,YAAY,EAAE;AAJT,GAXkB;AAiBzBhB,EAAAA,KAAK,EAAE;AACLqB,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,UAAU,EAAE,KAFP;AAGLC,IAAAA,KAAK,EAAE;AAHF,GAjBkB;AAsBzB3B,EAAAA,GAAG,EAAE;AACHuB,IAAAA,MAAM,EAAE;AADL,GAtBoB;AAyBzBzC,EAAAA,IAAI,EAAE;AACJ2C,IAAAA,QAAQ,EAAE,EADN;AAEJC,IAAAA,UAAU,EAAE,KAFR;AAGJC,IAAAA,KAAK,EAAE;AAHH;AAzBmB,CAAlB,CAAb","sourcesContent":["import React,{useEffect,useState,useRef} from \"react\";\nimport {StyleSheet,Text,View,TextInput,Button,Alert} from \"react-native\";\nimport {Formik} from \"formik\";\nimport MapView, { PROVIDER_GOOGLE, Marker } from \"react-native-maps\";\nimport * as yup from\"yup\";\nimport * as Locate from \"expo-location\";\n\nconst ReviewSchema=yup.object({\n    flatnumber:yup.string().required(),\n    society:yup.string().required(),\n    area:yup.string().required(),\n    landmark:yup.string().required(),\n});\n\nexport default function Location()\n{\n    const onSubmitHandler=()=>{\n        console.log(\"going to other page\");\n        \n    }\n    const [locationServiceEnabled, setLocationServiceEnabled] = useState(false);\n  const [displayCurrentAddress, setDisplayCurrentAddress] = useState(\n    \"Wait, we are fetching you location...\"\n  );\n  const [latlong, setlatlong] = useState({ lat: 0, long: 0 });\n\n  useEffect(() => {\n    CheckIfLocationEnabled();\n    GetCurrentLocation();\n  }, []);\n\n  const GetCurrentLocation = async () => {\n    let { status } = await Locate.requestForegroundPermissionsAsync();\n\n    if (status !== \"granted\") {\n      Alert.alert(\n        \"Permission not granted\",\n        \"Allow the app to use location service.\",\n        [{ text: \"OK\" }],\n        { cancelable: false }\n      );\n    }\n\n    let { coords } = await Locate.getCurrentPositionAsync();\n\n    if (coords) {\n      const { latitude, longitude } = coords;\n      setlatlong({\n        lat: latitude,\n        long: longitude,\n      });\n      console.log(latitude, \" longi\", longitude);\n      let response = await Locate.reverseGeocodeAsync({\n        latitude,\n        longitude,\n      });\n\n      for (let item of response) {\n        let address = `${item.name}, ${item.street}, ${item.postalCode}, ${item.city}`;\n\n        setDisplayCurrentAddress(address);\n      }\n    }\n  };\n\n  const CheckIfLocationEnabled = async () => {\n    let enabled = await Locate.hasServicesEnabledAsync();\n\n    if (!enabled) {\n      Alert.alert(\n        \"Location Service not enabled\",\n        \"Please enable your location services to continue\",\n        [{ text: \"OK\" }],\n        { cancelable: false }\n      );\n    } else {\n      setLocationServiceEnabled(enabled);\n    }\n  };\n//   const callMap=()=> {\n//     console.log(\"hello\")\n//     //openMap({ latitude: 37.865101, longitude: -119.538330 });\n//   };\n    return (\n        <View style={styles.container}>\n            <View>\n                <View>\n                <MapView\n        provider={PROVIDER_GOOGLE}\n        style={styles.map}\n        region={{\n          latitude: latlong.lat,\n          longitude: latlong.long,\n          latitudeDelta: 0.01,\n          longitudeDelta: 0.01,\n        }}\n      >\n        <Marker\n        coordinate={\n          {\n            latitude:latlong.lat,\n            longitude:latlong.long\n          }\n        }\n          title={'Your location'}\n        >\n\n        </Marker>\n      </MapView>\n                </View>\n            <View style={styles.contentContainer}>\n                <Text style={styles.title}>What's your address?</Text>\n            </View>\n            <Text style={styles.text}>address{displayCurrentAddress}</Text>\n        </View>\n            <Formik initialValues={{flatnumber:'',society:'',area:'',location:''}}\n            validationSchema={ReviewSchema}\n            onSubmit={(values,actions)=>{\n                // addreview(values);\n                console.log(values);\n                actions.resetForm();\n                \n            }}>\n                {(props)=>(\n                    <View >\n                        <Text>Flatnumber</Text>\n                        <TextInput  placeholder='flatnumber' value={props.values.flatnumber} onChangeText={props.handleChange('flatnumber')}/>\n                        <Text>{props.touched.flatnumber && props.errors.flatnumber}</Text>\n                        <Text>society</Text>\n                        <TextInput  placeholder='society' value={props.values.society} onChangeText={props.handleChange('society')}/>\n                        <Text>{props.touched.flatnumber && props.errors.flatnumber}</Text>\n                        <Text>area</Text>\n                        <TextInput  placeholder='area' value={props.values.area} onChangeText={props.handleChange('area')}/>\n                        <Text>{props.touched.area && props.errors.area}</Text>\n                        <Text>location</Text>\n                        <TextInput  placeholder='location' value={props.values.location} onChangeText={props.handleChange('location')}/>\n                        <Text>{props.touched.location && props.errors.location}</Text>\n                        <Button  title=\"proceed\" onPress={()=>{props.handleSubmit();onSubmitHandler()}}/>\n                    </View>\n                )}\n        </Formik>\n        </View>\n    );\n}\nconst styles=StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: \"white\",\n        alignItems: \"center\",\n        paddingTop: 130,\n      },\n      contentContainer: {\n        alignItems: \"center\",\n        marginBottom: 20,\n      },\n      image: {\n        width: 150,\n        height: 150,\n        resizeMode: \"contain\",\n        marginBottom: 20,\n      },\n      title: {\n        fontSize: 22,\n        fontWeight: \"700\",\n        color: \"#FD0139\",\n      },\n      map: {\n        height: 300,\n      },\n      text: {\n        fontSize: 20,\n        fontWeight: \"400\",\n        color: \"red\",\n      },\n})"]},"metadata":{},"sourceType":"module"}