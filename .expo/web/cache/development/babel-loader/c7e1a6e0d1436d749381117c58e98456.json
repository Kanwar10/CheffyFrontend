{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP User\\\\native7\\\\cheffy-app-client\\\\screens\\\\password.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport axios from 'axios';\nimport { mobileLink } from \"../links\";\nimport * as SecureStore from 'expo-secure-store';\nvar ReviewSchema = yup.object({\n  password: yup.string(),\n  confirmpassword: yup.string()\n});\nexport default function Password(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      pword = _useState2[0],\n      setpword = _useState2[1];\n\n  function save(key, value) {\n    return _regeneratorRuntime.async(function save$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(SecureStore.setItemAsync(key, value));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var onSubmitHandler = function onSubmitHandler(val) {\n    var params, axiosConfig, response;\n    return _regeneratorRuntime.async(function onSubmitHandler$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(\"on password page\", navigation.state.params);\n\n            if (!(val.password !== val.confirmpassword)) {\n              _context2.next = 5;\n              break;\n            }\n\n            console.log(\"data api\", navigation.state.params);\n            alert(\"passwords dont match\");\n            return _context2.abrupt(\"return\");\n\n          case 5:\n            params = JSON.stringify({\n              phone_number: navigation.state.params.phone_number,\n              password: val.password,\n              user_type: navigation.state.params.value\n            });\n            axiosConfig = {\n              headers: {\n                \"Content-Type\": \"application/json;charset=UTF-8\"\n              }\n            };\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(axios.post(mobileLink + \"register/\", params, axiosConfig));\n\n          case 9:\n            response = _context2.sent;\n            console.log(\"resp aftre reg\", response);\n\n            if (response.data.token !== undefined) {\n              save('token', response.data.token);\n            }\n\n            setpword(val.password);\n\n            if (navigation.state.params.value == 1) {\n              navigation.push('UserDetails', navigation.state.params);\n            } else {\n              navigation.push('ChefDetails', navigation.state.params);\n            }\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Formik, {\n    initialValues: {\n      password: '',\n      confirmpassword: ''\n    },\n    validationSchema: ReviewSchema,\n    onSubmit: function onSubmit(values, actions) {\n      actions.resetForm();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, function (props) {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.registerheading,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, \"Password\"), React.createElement(TextInput, {\n      style: styles.registerip,\n      value: props.values.password,\n      onChangeText: props.handleChange('password'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, props.touched.password && props.errors.password), React.createElement(Text, {\n      style: styles.registerheading,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, \" Confirm Password\"), React.createElement(TextInput, {\n      style: styles.registerip,\n      value: props.values.confirmpassword,\n      onChangeText: props.handleChange('confirmpassword'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, props.touched.confirmpassword && props.errors.confirmpassword), React.createElement(Button, {\n      color: \"#F57503\",\n      title: \"Create Account\",\n      onPress: function onPress() {\n        props.handleSubmit();\n        onSubmitHandler(props.values);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }), React.createElement(Button, {\n      title: \"next\",\n      onPress: function onPress() {\n        navigation.push('ChefDetails');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }));\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  registerradioip: {\n    fontSize: 14\n  },\n  registerheading: {\n    fontSize: 12,\n    fontWeight: '700'\n  },\n  radio: {\n    flexDirection: 'row'\n  },\n  radio1: {\n    flexDirection: 'row'\n  },\n  registerip: {\n    borderColor: \"#FC8019\",\n    borderWidth: 1.5\n  }\n});","map":{"version":3,"sources":["C:/Users/HP User/native7/cheffy-app-client/screens/password.js"],"names":["React","useState","Formik","yup","axios","mobileLink","SecureStore","ReviewSchema","object","password","string","confirmpassword","Password","navigation","pword","setpword","save","key","value","setItemAsync","onSubmitHandler","val","console","log","state","params","alert","JSON","stringify","phone_number","user_type","axiosConfig","headers","post","response","data","token","undefined","push","values","actions","resetForm","props","styles","registerheading","registerip","handleChange","touched","errors","handleSubmit","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","registerradioip","fontSize","fontWeight","radio","flexDirection","radio1","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {StyleSheet,View,Text,TextInput,Button} from \"react-native\";\r\nimport {Formik} from \"formik\";\r\nimport * as yup from\"yup\";\r\nimport axios from 'axios';\r\nimport {mobileLink} from '../links';\r\nimport * as SecureStore from 'expo-secure-store';\r\n\r\nconst ReviewSchema=yup.object({\r\n    password:yup.string(),\r\n    confirmpassword:yup.string(),\r\n});\r\nexport default function Password({navigation})\r\n{\r\n    const [pword,setpword]=useState('');\r\n    async function save(key, value) {\r\n        await SecureStore.setItemAsync(key, value);\r\n      }\r\n    const onSubmitHandler=async(val)=>{\r\n        console.log(\"on password page\",navigation.state.params)\r\n\r\n        if(val.password!==val.confirmpassword)\r\n        {\r\n            console.log(\"data api\",navigation.state.params)\r\n            alert(\"passwords dont match\");\r\n            return;\r\n        }\r\n        const params = JSON.stringify({\r\n            phone_number: navigation.state.params.phone_number,\r\n            password:val.password,\r\n            user_type:navigation.state.params.value\r\n          });\r\n          \r\n          let axiosConfig = {\r\n            headers: {\r\n              \"Content-Type\": \"application/json;charset=UTF-8\",\r\n            },\r\n          };\r\n      \r\n      \r\n          \r\n          const response = await axios.post(`${mobileLink}register/`, params,axiosConfig);\r\n              console.log(\"resp aftre reg\",response);\r\n\r\n              if(response.data.token!== undefined)\r\n              {\r\n                  save('token',response.data.token);\r\n              }    \r\n        \r\n\r\n            setpword(val.password);\r\n            if(navigation.state.params.value==1)\r\n            {\r\n                navigation.push('UserDetails',navigation.state.params);\r\n            }\r\n            else\r\n            {\r\n                navigation.push('ChefDetails',navigation.state.params);\r\n            }\r\n           \r\n        \r\n    }\r\n    return (\r\n        <Formik initialValues={{password:'',confirmpassword:''}}\r\n            validationSchema={ReviewSchema}\r\n            onSubmit={(values,actions)=>{\r\n                // addreview(values);\r\n                // console.log(values);\r\n                actions.resetForm();\r\n                \r\n            }}>\r\n                {(props)=>(\r\n                    <View >\r\n                        <Text style={styles.registerheading}>Password</Text>\r\n                        <TextInput style={styles.registerip}   value={props.values.password} onChangeText={props.handleChange('password')}/>\r\n                        <Text>{props.touched.password && props.errors.password}</Text>\r\n                        <Text style={styles.registerheading}> Confirm Password</Text>\r\n                        <TextInput style={styles.registerip}   value={props.values.confirmpassword} onChangeText={props.handleChange('confirmpassword')}/>\r\n                        <Text>{props.touched.confirmpassword && props.errors.confirmpassword}</Text>\r\n                        <Button color=\"#F57503\"  title=\"Create Account\" onPress={()=>{props.handleSubmit();onSubmitHandler(props.values)}}/>\r\n                        <Button title=\"next\"   onPress={()=>{navigation.push('ChefDetails')}}/>\r\n                    </View>\r\n                )}\r\n        </Formik>\r\n    );\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    registerradioip:{\r\n      fontSize:14,\r\n    },\r\n    registerheading:\r\n    {\r\n      fontSize:12,\r\n      fontWeight:'700',\r\n      \r\n    },\r\n    radio:{\r\n      flexDirection:'row',\r\n    },\r\n    radio1:{\r\n      flexDirection:'row'\r\n    },\r\n    registerip:{\r\n      borderColor:\"#FC8019\",\r\n      borderWidth:1.5,\r\n    }\r\n  });"]},"metadata":{},"sourceType":"module"}