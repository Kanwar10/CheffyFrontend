{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP User\\\\native4\\\\cheffy\\\\screens\\\\password.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport axios from 'axios';\nimport { mobileLink } from \"../links\";\nvar ReviewSchema = yup.object({\n  password: yup.string(),\n  confirmpassword: yup.string()\n});\nexport default function Password(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      pword = _useState2[0],\n      setpword = _useState2[1];\n\n  var onSubmitHandler = function onSubmitHandler(val) {\n    var params, axiosConfig, response;\n    return _regeneratorRuntime.async(function onSubmitHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"on password page\", navigation.state.params);\n\n            if (!(val.password !== val.confirmpassword)) {\n              _context.next = 4;\n              break;\n            }\n\n            alert(\"passwords dont match\");\n            return _context.abrupt(\"return\");\n\n          case 4:\n            params = JSON.stringify({\n              phone_number: navigation.state.params.phone_number,\n              password: val.password\n            });\n            axiosConfig = {\n              headers: {\n                \"Content-Type\": \"application/json;charset=UTF-8\"\n              }\n            };\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(axios.post(mobileLink + \"register/\", params, axiosConfig));\n\n          case 8:\n            response = _context.sent;\n            console.log(response);\n            setpword(val.password);\n\n            if (navigation.state.params == 1) {\n              navigation.push('UserDetails');\n            } else {\n              navigation.push('ChefDetails');\n            }\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Formik, {\n    initialValues: {\n      password: '',\n      confirmpassword: ''\n    },\n    validationSchema: ReviewSchema,\n    onSubmit: function onSubmit(values, actions) {\n      console.log(values);\n      actions.resetForm();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, function (props) {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }\n    }, \"Password\"), React.createElement(TextInput, {\n      placeholder: \"password\",\n      value: props.values.password,\n      onChangeText: props.handleChange('password'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, props.touched.password && props.errors.password), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }, \" confirm Password\"), React.createElement(TextInput, {\n      placeholder: \" confirm password\",\n      value: props.values.confirmpassword,\n      onChangeText: props.handleChange('confirmpassword'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, props.touched.confirmpassword && props.errors.confirmpassword), React.createElement(Button, {\n      title: \"REGISTER\",\n      onPress: function onPress() {\n        props.handleSubmit();\n        onSubmitHandler(props.values);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }));\n  });\n}","map":{"version":3,"sources":["C:/Users/HP User/native4/cheffy/screens/password.js"],"names":["React","useState","Formik","yup","axios","mobileLink","ReviewSchema","object","password","string","confirmpassword","Password","navigation","pword","setpword","onSubmitHandler","val","console","log","state","params","alert","JSON","stringify","phone_number","axiosConfig","headers","post","response","push","values","actions","resetForm","props","handleChange","touched","errors","handleSubmit"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {StyleSheet,View,Text,TextInput,Button} from \"react-native\";\r\nimport {Formik} from \"formik\";\r\nimport * as yup from\"yup\";\r\nimport axios from 'axios';\r\nimport {mobileLink} from '../links';\r\nconst ReviewSchema=yup.object({\r\n    password:yup.string(),\r\n    confirmpassword:yup.string(),\r\n});\r\nexport default function Password({navigation})\r\n{\r\n    const [pword,setpword]=useState('');\r\n    const onSubmitHandler=async(val)=>{\r\n        console.log(\"on password page\",navigation.state.params)\r\n\r\n        if(val.password!==val.confirmpassword)\r\n        {\r\n            alert(\"passwords dont match\");\r\n            return;\r\n        }\r\n        const params = JSON.stringify({\r\n            phone_number: navigation.state.params.phone_number,\r\n            password:val.password\r\n          });\r\n      \r\n          let axiosConfig = {\r\n            headers: {\r\n              \"Content-Type\": \"application/json;charset=UTF-8\",\r\n            },\r\n          };\r\n      \r\n      \r\n          \r\n          const response = await axios.post(`${mobileLink}register/`, params,axiosConfig);\r\n              console.log(response);\r\n\r\n\r\n        \r\n        \r\n        \r\n            setpword(val.password);\r\n            if(navigation.state.params==1)\r\n            {\r\n                navigation.push('UserDetails');\r\n            }\r\n            else\r\n            {\r\n                navigation.push('ChefDetails');\r\n            }\r\n           \r\n        \r\n    }\r\n    return (\r\n        <Formik initialValues={{password:'',confirmpassword:''}}\r\n            validationSchema={ReviewSchema}\r\n            onSubmit={(values,actions)=>{\r\n                // addreview(values);\r\n                console.log(values);\r\n                actions.resetForm();\r\n                \r\n            }}>\r\n                {(props)=>(\r\n                    <View >\r\n                        <Text>Password</Text>\r\n                        <TextInput  placeholder='password' value={props.values.password} onChangeText={props.handleChange('password')}/>\r\n                        <Text>{props.touched.password && props.errors.password}</Text>\r\n                        <Text> confirm Password</Text>\r\n                        <TextInput  placeholder=' confirm password' value={props.values.confirmpassword} onChangeText={props.handleChange('confirmpassword')}/>\r\n                        <Text>{props.touched.confirmpassword && props.errors.confirmpassword}</Text>\r\n                        <Button  title=\"REGISTER\" onPress={()=>{props.handleSubmit();onSubmitHandler(props.values)}}/>\r\n                    </View>\r\n                )}\r\n        </Formik>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}