{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/archingupta/Desktop/cheffyfront/cheffy-app-client/screens/password.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport axios from 'axios';\nimport { mobileLink } from \"../links\";\nimport * as SecureStore from 'expo-secure-store';\nvar ReviewSchema = yup.object({\n  password: yup.string(),\n  confirmpassword: yup.string()\n});\nexport default function Password(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      pword = _useState2[0],\n      setpword = _useState2[1];\n\n  function save(key, value) {\n    return _regeneratorRuntime.async(function save$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(SecureStore.setItemAsync(key, value));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var onSubmitHandler = function onSubmitHandler(val) {\n    var params, axiosConfig, response;\n    return _regeneratorRuntime.async(function onSubmitHandler$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(\"on password page\", navigation.state.params);\n\n            if (!(val.password !== val.confirmpassword)) {\n              _context2.next = 5;\n              break;\n            }\n\n            console.log(\"data api\", navigation.state.params);\n            alert(\"passwords dont match\");\n            return _context2.abrupt(\"return\");\n\n          case 5:\n            params = JSON.stringify({\n              phone_number: navigation.state.params.phone_number,\n              password: val.password,\n              user_type: navigation.state.params.value\n            });\n            axiosConfig = {\n              headers: {\n                \"Content-Type\": \"application/json;charset=UTF-8\"\n              }\n            };\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(axios.post(mobileLink + \"register/\", params, axiosConfig));\n\n          case 9:\n            response = _context2.sent;\n            console.log(\"resp aftre reg\", response);\n\n            if (response.data.token !== undefined) {\n              save('token', response.data.token);\n            }\n\n            setpword(val.password);\n\n            if (navigation.state.params.value == 1) {\n              navigation.push('UserDetails', navigation.state.params);\n            } else {\n              navigation.push('ChefDetails', navigation.state.params);\n            }\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.container1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), React.createElement(Formik, {\n    initialValues: {\n      password: '',\n      confirmpassword: ''\n    },\n    validationSchema: ReviewSchema,\n    onSubmit: function onSubmit(values, actions) {\n      actions.resetForm();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, function (props) {\n    return React.createElement(View, {\n      style: styles.container2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.container21,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, \"Password\"), React.createElement(TextInput, {\n      style: styles.container22,\n      value: props.values.password,\n      onChangeText: props.handleChange('password'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }), React.createElement(Text, {\n      style: styles.container21,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, \" Confirm Password\"), React.createElement(TextInput, {\n      style: styles.container22,\n      value: props.values.confirmpassword,\n      onChangeText: props.handleChange('confirmpassword'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }), React.createElement(Button, {\n      color: \"#F57503\",\n      title: \"Create Account\",\n      onPress: function onPress() {\n        props.handleSubmit();\n        onSubmitHandler(props.values);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }), React.createElement(Button, {\n      title: \"next\",\n      onPress: function onPress() {\n        navigation.push('UserDetails');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }));\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    backgroundColor: '#ffffff'\n  },\n  container1: {\n    width: '100%',\n    height: 68,\n    backgroundColor: '#ffffff'\n  },\n  container2: {\n    borderWidth: 2,\n    borderColor: 'black',\n    borderStyle: 'solid',\n    marginLeft: 20,\n    marginRight: 20\n  },\n  container21: {\n    marginBottom: 10,\n    fontSize: 12,\n    fontWeight: \"bold\"\n  },\n  container22: {\n    borderColor: \"#F57503\",\n    borderWidth: 1,\n    marginBottom: 10,\n    height: 35,\n    borderRadius: 3,\n    paddingLeft: 20\n  }\n});","map":{"version":3,"sources":["/Users/archingupta/Desktop/cheffyfront/cheffy-app-client/screens/password.js"],"names":["React","useState","Formik","yup","axios","mobileLink","SecureStore","ReviewSchema","object","password","string","confirmpassword","Password","navigation","pword","setpword","save","key","value","setItemAsync","onSubmitHandler","val","console","log","state","params","alert","JSON","stringify","phone_number","user_type","axiosConfig","headers","post","response","data","token","undefined","push","styles","container","container1","values","actions","resetForm","props","container2","container21","container22","handleChange","handleSubmit","StyleSheet","create","flexDirection","justifyContent","backgroundColor","width","height","borderWidth","borderColor","borderStyle","marginLeft","marginRight","marginBottom","fontSize","fontWeight","borderRadius","paddingLeft"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {StyleSheet,View,Text,TextInput,Button} from \"react-native\";\nimport {Formik} from \"formik\";\nimport * as yup from\"yup\";\nimport axios from 'axios';\nimport {mobileLink} from '../links';\nimport * as SecureStore from 'expo-secure-store';\n\nconst ReviewSchema=yup.object({\n    password:yup.string(),\n    confirmpassword:yup.string(),\n});\nexport default function Password({navigation})\n{\n    const [pword,setpword]=useState('');\n    async function save(key, value) {\n        await SecureStore.setItemAsync(key, value);\n      }\n    const onSubmitHandler=async(val)=>{\n        console.log(\"on password page\",navigation.state.params)\n\n        if(val.password!==val.confirmpassword)\n        {\n            console.log(\"data api\",navigation.state.params)\n            alert(\"passwords dont match\");\n            return;\n        }\n        const params = JSON.stringify({\n            phone_number: navigation.state.params.phone_number,\n            password:val.password,\n            user_type:navigation.state.params.value\n          });\n          \n          let axiosConfig = {\n            headers: {\n              \"Content-Type\": \"application/json;charset=UTF-8\",\n            },\n          };\n      \n      \n          \n          const response = await axios.post(`${mobileLink}register/`, params,axiosConfig);\n              console.log(\"resp aftre reg\",response);\n\n              if(response.data.token!== undefined)\n              {\n                  save('token',response.data.token);\n              }    \n        \n\n            setpword(val.password);\n            if(navigation.state.params.value==1)\n            {\n                navigation.push('UserDetails',navigation.state.params);\n            }\n            else\n            {\n                navigation.push('ChefDetails',navigation.state.params);\n            }\n           \n        \n    }\n    return (\n      <View style={styles.container}>\n        <View style={styles.container1}></View>\n        <Formik initialValues={{password:'',confirmpassword:''}} validationSchema={ReviewSchema} onSubmit={(values,actions)=>{actions.resetForm();}}>\n          {(props)=>(\n            <View style={styles.container2}>\n              <Text style={styles.container21}>Password</Text>\n              <TextInput style={styles.container22}   value={props.values.password} onChangeText={props.handleChange('password')}/>\n              {/* <Text>{props.touched.password && props.errors.password}</Text> */}\n              <Text style={styles.container21}> Confirm Password</Text>\n              <TextInput style={styles.container22}   value={props.values.confirmpassword} onChangeText={props.handleChange('confirmpassword')}/>\n              {/* <Text>{props.touched.confirmpassword && props.errors.confirmpassword}</Text> */}\n              <Button color=\"#F57503\"  title=\"Create Account\" onPress={()=>{props.handleSubmit();onSubmitHandler(props.values)}}/>\n              <Button title=\"next\"   onPress={()=>{navigation.push('UserDetails')}}/>\n            </View>\n          )}\n        </Formik>\n      </View>\n    );\n}\nconst styles = StyleSheet.create({\n    container: {\n      flexDirection:'column',\n      justifyContent:'flex-start',\n      backgroundColor:'#ffffff',\n    },\n    container1:{\n      width:'100%',\n      height:68,\n      backgroundColor:'#ffffff',\n      // borderWidth:2,\n      // borderColor:'black',\n      // borderStyle:'solid',\n    },\n    container2:{\n      borderWidth:2,\n      borderColor:'black',\n      borderStyle:'solid',\n      marginLeft:20,\n      marginRight:20,\n    },\n    container21:{\n     \n        marginBottom:10,\n        fontSize:12,\n        fontWeight:\"bold\",\n    \n    },\n    container22:{\n      borderColor:\"#F57503\",\n    borderWidth:1,\n    marginBottom:10,\n    height:35,\n    borderRadius:3,\n    paddingLeft:20,\n    }\n   \n  });"]},"metadata":{},"sourceType":"module"}