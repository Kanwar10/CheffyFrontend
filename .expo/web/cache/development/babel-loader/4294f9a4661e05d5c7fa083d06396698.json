{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/archingupta/Desktop/Cheffy/screens/login.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { RadioButton } from \"react-native-paper\";\nvar ReviewSchema = yup.object({\n  username: yup.string().required(),\n  password: yup.string().required()\n});\nexport default function Login(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    'username': '',\n    'password': ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      loginDetails = _useState2[0],\n      setloginDetails = _useState2[1];\n\n  var onSubmitHandler = function onSubmitHandler(val) {\n    setloginDetails({\n      'username': val.username,\n      'password': val.password\n    });\n    console.log(\"going to other page\", val);\n    navigation.push(\"Homescreen\");\n  };\n\n  var _React$useState = React.useState(1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    validationSchema: ReviewSchema,\n    onSubmit: function onSubmit(values, actions) {\n      console.log(values);\n      actions.resetForm();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, function (props) {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }\n    }, \"username\"), React.createElement(TextInput, {\n      placeholder: \"username\",\n      value: props.values.username,\n      onChangeText: props.handleChange('username'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }\n    }, props.touched.username && props.errors.username), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }\n    }, \"password\"), React.createElement(TextInput, {\n      placeholder: \"password\",\n      value: props.values.password,\n      onChangeText: props.handleChange('password'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, props.touched.password && props.errors.password), React.createElement(Button, {\n      title: \"Login\",\n      onPress: function onPress() {\n        props.handleSubmit();\n        onSubmitHandler(props.values);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }));\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  radio: {\n    flexDirection: 'row'\n  },\n  radio1: {\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"sources":["/Users/archingupta/Desktop/Cheffy/screens/login.js"],"names":["React","useState","Formik","yup","RadioButton","ReviewSchema","object","username","string","required","password","Login","navigation","loginDetails","setloginDetails","onSubmitHandler","val","console","log","push","value","setValue","values","actions","resetForm","props","handleChange","touched","errors","handleSubmit","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","radio","flexDirection","radio1"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {StyleSheet,View,Text,TextInput,Button} from \"react-native\";\nimport {Formik} from \"formik\";\nimport * as yup from\"yup\";\nimport {RadioButton} from \"react-native-paper\"\nconst ReviewSchema=yup.object({\n    username:yup.string().required(),\n    password:yup.string().required(),\n});\nexport default function Login({navigation})\n{\n    const [loginDetails,setloginDetails]=useState({'username':'','password':''});\n    const onSubmitHandler=(val)=>{\n        setloginDetails({\n           'username':val.username,\n           'password':val.password, \n        })\n        console.log(\"going to other page\",val);\n        navigation.push(\"Homescreen\");\n    }\n    const [value, setValue] = React.useState(1);\n    return (\n        <View>\n        <Formik initialValues={{username:'',password:''}}\n            validationSchema={ReviewSchema}\n            onSubmit={(values,actions)=>{\n                // addreview(values);\n                console.log(values);\n                actions.resetForm();\n                \n            }}>\n                {(props)=>(\n                    <View >\n                        <Text>username</Text>\n                        <TextInput  placeholder='username' value={props.values.username} onChangeText={props.handleChange('username')}/>\n                        <Text>{props.touched.username && props.errors.username}</Text>\n                        <Text>password</Text>\n                        <TextInput  placeholder='password' value={props.values.password} onChangeText={props.handleChange('password')}/>\n                        <Text>{props.touched.password && props.errors.password}</Text>\n                        <Button  title=\"Login\" onPress={()=>{props.handleSubmit();onSubmitHandler(props.values)}}/>\n                    </View>\n                )}\n        </Formik>\n    </View>\n    );\n} \nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    radio:{\n      flexDirection:'row',\n    },\n    radio1:{\n      flexDirection:'row'\n    }\n  });"]},"metadata":{},"sourceType":"module"}