{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/archingupta/Desktop/cheffyfront/cheffy-app-client/screens/login.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { RadioButton } from \"react-native-paper\";\nimport axios from 'axios';\nimport { mobileLink } from \"../links\";\nimport * as SecureStore from 'expo-secure-store';\nvar ReviewSchema = yup.object({\n  username: yup.string().required(),\n  password: yup.string().required()\n});\nexport default function Login(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    'username': '',\n    'password': ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      loginDetails = _useState2[0],\n      setloginDetails = _useState2[1];\n\n  function save(key, value) {\n    return _regeneratorRuntime.async(function save$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(SecureStore.setItemAsync(key, value));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function getValueFor(key) {\n    var result;\n    return _regeneratorRuntime.async(function getValueFor$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync(key));\n\n          case 2:\n            result = _context2.sent;\n\n            if (result) {\n              alert(\"üîê Here's your value üîê \\n\" + result);\n            } else {\n              alert('No values stored under that key.');\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var onSubmitHandler = function onSubmitHandler(val) {\n    var params, axiosConfig, response;\n    return _regeneratorRuntime.async(function onSubmitHandler$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setloginDetails({\n              'username': val.username,\n              'password': val.password\n            });\n            params = JSON.stringify({\n              phone_number: val.username,\n              password: val.password\n            });\n            axiosConfig = {\n              headers: {\n                \"Content-Type\": \"application/json;charset=UTF-8\"\n              }\n            };\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(axios.post(mobileLink + \"login/\", params, axiosConfig));\n\n          case 5:\n            response = _context3.sent;\n            console.log(response.data.token);\n\n            if (response.data.token !== undefined) {\n              save('token', response.data.token);\n            }\n\n            console.log(\"going to other page\", val);\n            navigation.push(\"Homescreen\");\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _React$useState = React.useState(1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.container1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), React.createElement(Formik, {\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    validationSchema: ReviewSchema,\n    onSubmit: function onSubmit(values, actions) {\n      actions.resetForm();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, function (props) {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.registerheading,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, \"Mobile Number\"), React.createElement(TextInput, {\n      style: styles.registerip,\n      value: props.values.username,\n      onChangeText: props.handleChange('username'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }, props.touched.username && props.errors.username), React.createElement(Text, {\n      style: styles.registerheading,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, \"Password\"), React.createElement(TextInput, {\n      style: styles.registerip,\n      value: props.values.password,\n      onChangeText: props.handleChange('password'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, props.touched.password && props.errors.password), React.createElement(Button, {\n      color: \"#F57503\",\n      title: \"Login\",\n      onPress: function onPress() {\n        props.handleSubmit();\n        onSubmitHandler(props.values);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }));\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  radio: {\n    flexDirection: 'row'\n  },\n  radio1: {\n    flexDirection: 'row'\n  },\n  registerip: {\n    borderColor: \"#FC8019\",\n    borderWidth: 1.5\n  },\n  registerheading: {\n    fontSize: 12,\n    fontWeight: '700'\n  }\n});","map":{"version":3,"sources":["/Users/archingupta/Desktop/cheffyfront/cheffy-app-client/screens/login.js"],"names":["React","useState","Formik","yup","RadioButton","axios","mobileLink","SecureStore","ReviewSchema","object","username","string","required","password","Login","navigation","loginDetails","setloginDetails","save","key","value","setItemAsync","getValueFor","getItemAsync","result","alert","onSubmitHandler","val","params","JSON","stringify","phone_number","axiosConfig","headers","post","response","console","log","data","token","undefined","push","setValue","styles","container","container1","values","actions","resetForm","props","registerheading","registerip","handleChange","touched","errors","handleSubmit","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","radio","flexDirection","radio1","borderColor","borderWidth","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {StyleSheet,View,Text,TextInput,Button} from \"react-native\";\nimport {Formik} from \"formik\";\nimport * as yup from\"yup\";\nimport {RadioButton} from \"react-native-paper\"\nimport axios from 'axios';\nimport {mobileLink} from '../links'\nimport * as SecureStore from 'expo-secure-store';\n\n\nconst ReviewSchema=yup.object({\n    username:yup.string().required(),\n    password:yup.string().required(),\n});\nexport default function Login({navigation})\n{\n\n    const [loginDetails,setloginDetails]=useState({'username':'','password':''});\n    async function save(key, value) {\n        await SecureStore.setItemAsync(key, value);\n      }\n      async function getValueFor(key) {\n        let result = await SecureStore.getItemAsync(key);\n        if (result) {\n          alert(\"üîê Here's your value üîê \\n\" + result);\n        } else {\n          alert('No values stored under that key.');\n        }\n      }\n    \n    \n    \n    const onSubmitHandler=async (val)=>{\n        setloginDetails({\n           'username':val.username,\n           'password':val.password, \n        })\n        const params = JSON.stringify({\n            phone_number: val.username,\n            password:val.password\n          });\n      \n          let axiosConfig = {\n            headers: {\n              \"Content-Type\": \"application/json;charset=UTF-8\",\n            },\n          };\n      \n      \n          \n          const response = await axios.post(`${mobileLink}login/`, params,axiosConfig);\n              console.log(response.data.token);\n        \n          if(response.data.token!== undefined)\n          {\n              save('token',response.data.token);\n          }\n\n        console.log(\"going to other page\",val);\n        navigation.push(\"Homescreen\");\n    }\n    const [value, setValue] = React.useState(1);\n    return (\n      <View style={styles.container}>\n        <View style={styles.container1}></View>\n        <Formik initialValues={{username:'',password:''}} validationSchema={ReviewSchema} onSubmit={(values,actions)=>{actions.resetForm();}}>\n          {(props)=>(\n            <View >\n              <Text style={styles.registerheading}>Mobile Number</Text>\n              <TextInput style={styles.registerip}   value={props.values.username} onChangeText={props.handleChange('username')}/>\n              <Text>{props.touched.username && props.errors.username}</Text>\n              <Text style={styles.registerheading}>Password</Text>\n              <TextInput style={styles.registerip}   value={props.values.password} onChangeText={props.handleChange('password')}/>\n              <Text>{props.touched.password && props.errors.password}</Text>\n              <Button color=\"#F57503\"  title=\"Login\" onPress={()=>{props.handleSubmit();onSubmitHandler(props.values)}}/>\n            </View>\n          )}\n        </Formik>\n      </View>\n    );\n} \nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  radio:{\n    flexDirection:'row',\n  },\n  radio1:{\n    flexDirection:'row'\n  },\n  registerip:{\n      borderColor:\"#FC8019\",\n      borderWidth:1.5,\n    }\n    ,\n    registerheading:\n    {\n      fontSize:12,\n      fontWeight:'700',\n      \n    },\n});"]},"metadata":{},"sourceType":"module"}