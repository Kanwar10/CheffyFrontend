{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP User\\\\native7\\\\cheffy-app-client\\\\screens\\\\register.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { As } from \"react-native-web/dist/index\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { RadioButton } from \"react-native-paper\";\nimport axios from \"axios\";\nimport { mobileLink } from \"../links\";\nvar ReviewSchema = yup.object({\n  phonenumber: yup.string().required().min(2).max(10)\n});\nexport default function Register(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    phone: \"\",\n    typeofuser: 1\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      registerData = _useState2[0],\n      setregisterData = _useState2[1];\n\n  var _React$useState = React.useState(1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var onSubmitHandler = function onSubmitHandler(val) {\n    var params, axiosConfig, response;\n    return _regeneratorRuntime.async(function onSubmitHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(val.phonenumber, \" -------  \", value);\n            params = JSON.stringify({\n              phone_number: val.phonenumber\n            });\n            axiosConfig = {\n              headers: {\n                \"Content-Type\": \"application/json;charset=UTF-8\"\n              }\n            };\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(axios.post(mobileLink + \"sendotp/\", params, axiosConfig));\n\n          case 5:\n            response = _context.sent;\n            console.log(response);\n            console.log(\"chechk update----->\", registerData);\n            navigation.push(\"Otp\", {\n              'value': value,\n              'phone_number': val.phonenumber\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var loginpage = function loginpage() {\n    navigation.push(\"Login\");\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(RadioButton.Group, {\n    onValueChange: function onValueChange(newValue) {\n      return setValue(newValue);\n    },\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.radio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.radio1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, React.createElement(RadioButton, {\n    color: \"#FC8019\",\n    title: \"scasc1\",\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.registerradioip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"I'm looking for a chef\")), React.createElement(View, {\n    style: styles.radio1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(RadioButton, {\n    color: \"#FC8019\",\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.registerradioip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"I'm a chief\"))))), React.createElement(Formik, {\n    initialValues: {\n      phonenumber: ''\n    },\n    validationSchema: ReviewSchema,\n    onSubmit: function onSubmit(values, actions) {\n      actions.resetForm();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, function (props) {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.registerheading,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 23\n      }\n    }, \"Enter Mobile Number*\"), React.createElement(TextInput, {\n      style: styles.registerip,\n      keyboardType: \"decimal-pad\",\n      placeholder: \"10 Digit Mobile Number\",\n      value: props.values.phonenumber,\n      onChangeText: props.handleChange('phonenumber'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, props.touched.title && props.errors.title), React.createElement(Button, {\n      title: \"REGISTER\",\n      color: \"#FC8019\",\n      onPress: function onPress() {\n        props.handleSubmit();\n        onSubmitHandler(props.values);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }));\n  }), React.createElement(Button, {\n    title: \"already registered proceed to login\",\n    color: \"#FC8019\",\n    onPress: loginpage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  registerradioip: {\n    fontSize: 14\n  },\n  registerheading: {\n    fontSize: 12,\n    fontWeight: '700'\n  },\n  radio: {\n    flexDirection: 'row'\n  },\n  radio1: {\n    flexDirection: 'row'\n  },\n  registerip: {\n    borderColor: \"#FC8019\",\n    borderWidth: 1.5\n  }\n});","map":{"version":3,"sources":["C:/Users/HP User/native7/cheffy-app-client/screens/register.js"],"names":["React","useEffect","useState","As","Formik","yup","RadioButton","axios","mobileLink","ReviewSchema","object","phonenumber","string","required","min","max","Register","navigation","phone","typeofuser","registerData","setregisterData","value","setValue","onSubmitHandler","val","console","log","params","JSON","stringify","phone_number","axiosConfig","headers","post","response","push","loginpage","newValue","styles","radio","radio1","registerradioip","values","actions","resetForm","props","registerheading","registerip","handleChange","touched","title","errors","handleSubmit","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","fontSize","fontWeight","flexDirection","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { StyleSheet, View, Text, TextInput, Button, As } from \"react-native\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { RadioButton } from \"react-native-paper\";\r\nimport axios from \"axios\";\r\nimport {mobileLink} from '../links'\r\nconst ReviewSchema = yup.object({\r\n  phonenumber: yup.string().required().min(2).max(10),\r\n});\r\nexport default function Register({ navigation }) {\r\n  // output value\r\n  const [registerData, setregisterData] = useState({\r\n    phone: \"\",\r\n    typeofuser: 1,\r\n  });\r\n  const [value, setValue] = React.useState(1);\r\n\r\n  const onSubmitHandler =async (val) => {\r\n    console.log(val.phonenumber, \" -------  \", value);\r\n\r\n    const params = JSON.stringify({\r\n      phone_number: val.phonenumber,\r\n    });\r\n\r\n    let axiosConfig = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n\r\n    \r\n    const response = await axios.post(`${mobileLink}sendotp/`, params,axiosConfig);\r\n        console.log(response);\r\n    console.log(\"chechk update----->\", registerData);\r\n    navigation.push(\"Otp\", { 'value':value, 'phone_number':val.phonenumber});\r\n  };\r\n\r\n  const loginpage = () => {\r\n    navigation.push(\"Login\");\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <View>\r\n        <RadioButton.Group onValueChange={newValue => setValue(newValue)} value={value} >\r\n    <View style={styles.radio}>\r\n      <View style={styles.radio1}>\r\n        \r\n        <RadioButton color=\"#FC8019\" title=\"scasc1\"value={1} />\r\n        <Text style={styles.registerradioip}>I'm looking for a chef</Text>\r\n      </View>\r\n      <View style={styles.radio1}>\r\n        \r\n        <RadioButton color=\"#FC8019\" value={2} />\r\n        <Text style={styles.registerradioip}>I'm a chief</Text>\r\n      </View>\r\n      </View>\r\n    </RadioButton.Group>\r\n            </View>\r\n        <Formik initialValues={{phonenumber:''}}\r\n            validationSchema={ReviewSchema}\r\n            \r\n            onSubmit={(values,actions)=>{\r\n             \r\n                // addreview(values);\r\n                // console.log(\"----/////----\",values,\"----//\",value);\r\n                actions.resetForm();\r\n                \r\n            }}>\r\n                {(props)=>(\r\n                    <View >\r\n                      <Text style={styles.registerheading}>Enter Mobile Number*</Text>\r\n                        <TextInput style={styles.registerip} keyboardType={\"decimal-pad\"}  placeholder='10 Digit Mobile Number' value={props.values.phonenumber} onChangeText={props.handleChange('phonenumber')}/>\r\n                        <Text>{props.touched.title && props.errors.title}</Text>\r\n                        <Button  title=\"REGISTER\" color=\"#FC8019\"  onPress={()=>{props.handleSubmit();onSubmitHandler(props.values)}}/>\r\n                    </View>\r\n                )}\r\n        </Formik>\r\n        <Button title='already registered proceed to login' color=\"#FC8019\" onPress={loginpage}/>\r\n    </View>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  registerradioip:{\r\n    fontSize:14,\r\n  },\r\n  registerheading:\r\n  {\r\n    fontSize:12,\r\n    fontWeight:'700',\r\n    \r\n  },\r\n  radio:{\r\n    flexDirection:'row',\r\n  },\r\n  radio1:{\r\n    flexDirection:'row'\r\n  },\r\n  registerip:{\r\n    borderColor:\"#FC8019\",\r\n    borderWidth:1.5,\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}