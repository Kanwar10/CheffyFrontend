{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP User\\\\native7\\\\cheffy-app-client\\\\screens\\\\login.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { RadioButton } from \"react-native-paper\";\nimport axios from 'axios';\nimport { mobileLink } from \"../links\";\nimport * as SecureStore from 'expo-secure-store';\nvar ReviewSchema = yup.object({\n  username: yup.string().required(),\n  password: yup.string().required()\n});\nexport default function Login(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    'username': '',\n    'password': ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      loginDetails = _useState2[0],\n      setloginDetails = _useState2[1];\n\n  function save(key, value) {\n    return _regeneratorRuntime.async(function save$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(SecureStore.setItemAsync(key, value));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function getValueFor(key) {\n    var result;\n    return _regeneratorRuntime.async(function getValueFor$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync(key));\n\n          case 2:\n            result = _context2.sent;\n\n            if (result) {\n              alert(\"üîê Here's your value üîê \\n\" + result);\n            } else {\n              alert('No values stored under that key.');\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var onSubmitHandler = function onSubmitHandler(val) {\n    var params, axiosConfig, response;\n    return _regeneratorRuntime.async(function onSubmitHandler$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setloginDetails({\n              'username': val.username,\n              'password': val.password\n            });\n            params = JSON.stringify({\n              phone_number: val.username,\n              password: val.password\n            });\n            axiosConfig = {\n              headers: {\n                \"Content-Type\": \"application/json;charset=UTF-8\"\n              }\n            };\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(axios.post(mobileLink + \"login/\", params, axiosConfig));\n\n          case 5:\n            response = _context3.sent;\n            console.log(response.data.token);\n\n            if (response.data.token !== undefined) {\n              save('token', response.data.token);\n            }\n\n            console.log(\"going to other page\", val);\n            navigation.push(\"Homescreen\");\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _React$useState = React.useState(1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    validationSchema: ReviewSchema,\n    onSubmit: function onSubmit(values, actions) {\n      actions.resetForm();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, function (props) {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      style: styles.registerheading,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 23\n      }\n    }, \"Mobile Number\"), React.createElement(TextInput, {\n      style: styles.registerip,\n      value: props.values.username,\n      onChangeText: props.handleChange('username'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 23\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 23\n      }\n    }, props.touched.username && props.errors.username), React.createElement(Text, {\n      style: styles.registerheading,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 23\n      }\n    }, \"Password\"), React.createElement(TextInput, {\n      style: styles.registerip,\n      value: props.values.password,\n      onChangeText: props.handleChange('password'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 23\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 23\n      }\n    }, props.touched.password && props.errors.password), React.createElement(Button, {\n      color: \"#F57503\",\n      title: \"Login\",\n      onPress: function onPress() {\n        props.handleSubmit();\n        onSubmitHandler(props.values);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 23\n      }\n    }));\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  radio: {\n    flexDirection: 'row'\n  },\n  radio1: {\n    flexDirection: 'row'\n  },\n  registerip: {\n    borderColor: \"#FC8019\",\n    borderWidth: 1.5\n  },\n  registerheading: {\n    fontSize: 12,\n    fontWeight: '700'\n  }\n});","map":{"version":3,"sources":["C:/Users/HP User/native7/cheffy-app-client/screens/login.js"],"names":["React","useState","Formik","yup","RadioButton","axios","mobileLink","SecureStore","ReviewSchema","object","username","string","required","password","Login","navigation","loginDetails","setloginDetails","save","key","value","setItemAsync","getValueFor","getItemAsync","result","alert","onSubmitHandler","val","params","JSON","stringify","phone_number","axiosConfig","headers","post","response","console","log","data","token","undefined","push","setValue","values","actions","resetForm","props","styles","registerheading","registerip","handleChange","touched","errors","handleSubmit","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","radio","flexDirection","radio1","borderColor","borderWidth","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {StyleSheet,View,Text,TextInput,Button} from \"react-native\";\r\nimport {Formik} from \"formik\";\r\nimport * as yup from\"yup\";\r\nimport {RadioButton} from \"react-native-paper\"\r\nimport axios from 'axios';\r\nimport {mobileLink} from '../links'\r\nimport * as SecureStore from 'expo-secure-store';\r\n\r\n\r\nconst ReviewSchema=yup.object({\r\n    username:yup.string().required(),\r\n    password:yup.string().required(),\r\n});\r\nexport default function Login({navigation})\r\n{\r\n\r\n    const [loginDetails,setloginDetails]=useState({'username':'','password':''});\r\n    async function save(key, value) {\r\n        await SecureStore.setItemAsync(key, value);\r\n      }\r\n      async function getValueFor(key) {\r\n        let result = await SecureStore.getItemAsync(key);\r\n        if (result) {\r\n          alert(\"üîê Here's your value üîê \\n\" + result);\r\n        } else {\r\n          alert('No values stored under that key.');\r\n        }\r\n      }\r\n    \r\n    \r\n    \r\n    const onSubmitHandler=async (val)=>{\r\n        setloginDetails({\r\n           'username':val.username,\r\n           'password':val.password, \r\n        })\r\n        const params = JSON.stringify({\r\n            phone_number: val.username,\r\n            password:val.password\r\n          });\r\n      \r\n          let axiosConfig = {\r\n            headers: {\r\n              \"Content-Type\": \"application/json;charset=UTF-8\",\r\n            },\r\n          };\r\n      \r\n      \r\n          \r\n          const response = await axios.post(`${mobileLink}login/`, params,axiosConfig);\r\n              console.log(response.data.token);\r\n        \r\n          if(response.data.token!== undefined)\r\n          {\r\n              save('token',response.data.token);\r\n          }\r\n\r\n        console.log(\"going to other page\",val);\r\n        navigation.push(\"Homescreen\");\r\n    }\r\n    const [value, setValue] = React.useState(1);\r\n    return (\r\n      <View>\r\n      <Formik initialValues={{username:'',password:''}}\r\n          validationSchema={ReviewSchema}\r\n          onSubmit={(values,actions)=>{\r\n              // addreview(values);\r\n              // console.log(values);\r\n              actions.resetForm();\r\n              \r\n          }}>\r\n              {(props)=>(\r\n                  <View >\r\n                      <Text style={styles.registerheading}>Mobile Number</Text>\r\n                      <TextInput style={styles.registerip}   value={props.values.username} onChangeText={props.handleChange('username')}/>\r\n                      <Text>{props.touched.username && props.errors.username}</Text>\r\n                      <Text style={styles.registerheading}>Password</Text>\r\n                      <TextInput style={styles.registerip}   value={props.values.password} onChangeText={props.handleChange('password')}/>\r\n                      <Text>{props.touched.password && props.errors.password}</Text>\r\n                      <Button color=\"#F57503\"  title=\"Login\" onPress={()=>{props.handleSubmit();onSubmitHandler(props.values)}}/>\r\n                  </View>\r\n              )}\r\n      </Formik>\r\n  </View>\r\n    );\r\n} \r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  radio:{\r\n    flexDirection:'row',\r\n  },\r\n  radio1:{\r\n    flexDirection:'row'\r\n  },\r\n  registerip:{\r\n      borderColor:\"#FC8019\",\r\n      borderWidth:1.5,\r\n    }\r\n    ,\r\n    registerheading:\r\n    {\r\n      fontSize:12,\r\n      fontWeight:'700',\r\n      \r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}